@model Model.EF.ProductCategory
<div class="modal-content">

    <div class="modal-header">
        <h2>Cập nhật danh mục sản phẩm</h2>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-lg-12">
                @using (Html.BeginForm("Create", "ProductCategory", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control", @type = "number" })
                            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-2">Danh mục cha</label>
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.ParentID, new SelectList(OnlineShop.Common.CommonList.GetAllProductCategory(), "ID", "Name"), "--- Chọn danh mục cha ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SeoTitle, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.SeoTitle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.MetaDescriptions, new { @class = "form-control", style = "height:150px;" })
                                @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.CheckBoxFor(model => model.Status, new { @checked = "true" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Trở về</button>
                            <button type="submit" class="btn btn-primary" id="submitButton">Lưu</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


